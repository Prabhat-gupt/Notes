{"version":3,"file":"audit.js","names":["REGISTRY_DOMAIN","ProxyAudit","constructor","config","options","enabled","strict_ssl","undefined","logger","register_middlewares","app","auth","fetchAudit","req","res","headers","requestOptions","agent","https","Agent","rejectUnauthorized","body","JSON","stringify","method","https_proxy","createHttpsProxyAgent","Object","assign","auditEndpoint","baseUrl","route","path","debug","response","fetch","ok","status","send","json","warn","end","error","handleAudit","router","express","Router","post","jsonParser","limit","use"],"sources":["../src/audit.ts"],"sourcesContent":["import https from 'https';\nimport fetch from 'node-fetch';\nimport express, { Request, Response } from 'express';\nimport createHttpsProxyAgent from 'https-proxy-agent';\nimport { json as jsonParser } from 'body-parser';\nimport { Logger, IPluginMiddleware, IBasicAuth, PluginOptions } from '@verdaccio/types';\n\nimport { ConfigAudit } from './types';\n\n// FUTURE: we should be able to overwrite this\nexport const REGISTRY_DOMAIN = 'https://registry.npmjs.org';\n\nexport default class ProxyAudit implements IPluginMiddleware<ConfigAudit> {\n  public enabled: boolean;\n  public logger: Logger;\n  public strict_ssl: boolean;\n\n  public constructor(config: ConfigAudit, options: PluginOptions<ConfigAudit>) {\n    this.enabled = config.enabled || false;\n    this.strict_ssl = config.strict_ssl !== undefined ? config.strict_ssl : true;\n    this.logger = options.logger;\n  }\n\n  public register_middlewares(app: any, auth: IBasicAuth<ConfigAudit>): void {\n    const fetchAudit = (req: Request, res: Response & { report_error?: Function }): void => {\n      const headers = req.headers;\n\n      headers['host'] = 'registry.npmjs.org';\n      headers['content-encoding'] = 'gzip,deflate,br';\n\n      let requestOptions: any = {\n        agent: new https.Agent({ rejectUnauthorized: this.strict_ssl }),\n        body: JSON.stringify(req.body),\n        headers,\n        method: req.method,\n      };\n\n      if (auth?.config?.https_proxy) {\n        // we should check whether this works fine after this migration\n        // please notify if anyone is having issues\n        const agent = createHttpsProxyAgent(auth?.config?.https_proxy);\n        requestOptions = Object.assign({}, requestOptions, {\n          agent,\n        });\n      }\n\n      (async () => {\n        try {\n          const auditEndpoint = `${REGISTRY_DOMAIN}${req.baseUrl}${req.route.path}`;\n          this.logger.debug('fetching audit from ' + auditEndpoint);\n\n          const response = await fetch(auditEndpoint, requestOptions);\n\n          if (response.ok) {\n            res.status(response.status).send(await response.json());\n          } else {\n            this.logger.warn('could not fetch audit: ' + JSON.stringify(await response.json()));\n            res.status(response.status).end();\n          }\n        } catch (error) {\n          this.logger.warn('could not fetch audit: ' + error);\n          res.status(500).end();\n        }\n      })();\n    };\n\n    const handleAudit = (req: Request, res: Response): void => {\n      if (this.enabled) {\n        fetchAudit(req, res);\n      } else {\n        res.status(500).end();\n      }\n    };\n\n    /* eslint new-cap:off */\n    const router = express.Router();\n    /* eslint new-cap:off */\n\n    router.post('/audits', jsonParser({ limit: '10mb' }), handleAudit);\n    router.post('/audits/quick', jsonParser({ limit: '10mb' }), handleAudit);\n\n    router.post('/advisories/bulk', jsonParser({ limit: '10mb' }), handleAudit);\n\n    app.use('/-/npm/v1/security', router);\n  }\n}\n"],"mappings":"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"}