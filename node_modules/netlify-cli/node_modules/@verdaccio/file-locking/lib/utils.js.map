{"version":3,"file":"utils.js","names":["statDir","name","Promise","resolve","reject","dirPath","path","dirname","fs","stat","err","stats","isDirectory","Error","statfile","isFile","lockfile","lockOpts","wait","pollPeriod","stale","retries","retryWait","lockFileName","locker","lock","undefined"],"sources":["../src/utils.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport locker from 'lockfile';\n\nexport const statDir = (name: string): Promise<Error | null> => {\n  return new Promise((resolve, reject): void => {\n    // test to see if the directory exists\n    const dirPath = path.dirname(name);\n    fs.stat(dirPath, function (err, stats) {\n      if (err) {\n        return reject(err);\n      } else if (!stats.isDirectory()) {\n        return resolve(new Error(`${path.dirname(name)} is not a directory`));\n      } else {\n        return resolve(null);\n      }\n    });\n  });\n};\n\nexport const statfile = (name: string): Promise<Error | null> => {\n  return new Promise((resolve, reject): void => {\n    // test to see if the directory exists\n    fs.stat(name, function (err, stats) {\n      if (err) {\n        return reject(err);\n      } else if (!stats.isFile()) {\n        return resolve(new Error(`${path.dirname(name)} is not a file`));\n      } else {\n        return resolve(null);\n      }\n    });\n  });\n};\n\nexport const lockfile = (name: string): Promise<unknown> => {\n  return new Promise((resolve): void => {\n    const lockOpts = {\n      // time (ms) to wait when checking for stale locks\n      wait: 1000,\n      // how often (ms) to re-check stale locks\n      pollPeriod: 100,\n      // locks are considered stale after 5 minutes\n      stale: 5 * 60 * 1000,\n      // number of times to attempt to create a lock\n      retries: 100,\n      // time (ms) between tries\n      retryWait: 100,\n    };\n    const lockFileName = `${name}.lock`;\n    locker.lock(lockFileName, lockOpts, () => {\n      resolve(undefined);\n    });\n  });\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;AAEO,MAAMA,OAAO,GAAIC,IAAD,IAAyC;EAC9D,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAA2B;IAC5C;IACA,MAAMC,OAAO,GAAGC,aAAA,CAAKC,OAAL,CAAaN,IAAb,CAAhB;;IACAO,WAAA,CAAGC,IAAH,CAAQJ,OAAR,EAAiB,UAAUK,GAAV,EAAeC,KAAf,EAAsB;MACrC,IAAID,GAAJ,EAAS;QACP,OAAON,MAAM,CAACM,GAAD,CAAb;MACD,CAFD,MAEO,IAAI,CAACC,KAAK,CAACC,WAAN,EAAL,EAA0B;QAC/B,OAAOT,OAAO,CAAC,IAAIU,KAAJ,CAAW,GAAEP,aAAA,CAAKC,OAAL,CAAaN,IAAb,CAAmB,qBAAhC,CAAD,CAAd;MACD,CAFM,MAEA;QACL,OAAOE,OAAO,CAAC,IAAD,CAAd;MACD;IACF,CARD;EASD,CAZM,CAAP;AAaD,CAdM;;;;AAgBA,MAAMW,QAAQ,GAAIb,IAAD,IAAyC;EAC/D,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAA2B;IAC5C;IACAI,WAAA,CAAGC,IAAH,CAAQR,IAAR,EAAc,UAAUS,GAAV,EAAeC,KAAf,EAAsB;MAClC,IAAID,GAAJ,EAAS;QACP,OAAON,MAAM,CAACM,GAAD,CAAb;MACD,CAFD,MAEO,IAAI,CAACC,KAAK,CAACI,MAAN,EAAL,EAAqB;QAC1B,OAAOZ,OAAO,CAAC,IAAIU,KAAJ,CAAW,GAAEP,aAAA,CAAKC,OAAL,CAAaN,IAAb,CAAmB,gBAAhC,CAAD,CAAd;MACD,CAFM,MAEA;QACL,OAAOE,OAAO,CAAC,IAAD,CAAd;MACD;IACF,CARD;EASD,CAXM,CAAP;AAYD,CAbM;;;;AAeA,MAAMa,QAAQ,GAAIf,IAAD,IAAoC;EAC1D,OAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAmB;IACpC,MAAMc,QAAQ,GAAG;MACf;MACAC,IAAI,EAAE,IAFS;MAGf;MACAC,UAAU,EAAE,GAJG;MAKf;MACAC,KAAK,EAAE,IAAI,EAAJ,GAAS,IAND;MAOf;MACAC,OAAO,EAAE,GARM;MASf;MACAC,SAAS,EAAE;IAVI,CAAjB;IAYA,MAAMC,YAAY,GAAI,GAAEtB,IAAK,OAA7B;;IACAuB,iBAAA,CAAOC,IAAP,CAAYF,YAAZ,EAA0BN,QAA1B,EAAoC,MAAM;MACxCd,OAAO,CAACuB,SAAD,CAAP;IACD,CAFD;EAGD,CAjBM,CAAP;AAkBD,CAnBM"}