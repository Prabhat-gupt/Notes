{"version":3,"file":"readFile.js","names":["readFile","name","options","callback","lock","parse","Promise","resolve","reject","lockFile","err","read","fs","contents","parseJSON","JSON","then","content","result"],"sources":["../src/readFile.ts"],"sourcesContent":["import fs from 'fs';\n\nimport { Callback } from '@verdaccio/types';\n\nimport { lockFile } from './lockfile';\n\nexport type ReadFileOptions = {\n  parse?: boolean;\n  lock?: boolean;\n};\n\n/**\n *  Reads a local file, which involves\n *  optionally taking a lock\n *  reading the file contents\n *  optionally parsing JSON contents\n * @param {*} name\n * @param {*} options\n * @param {*} callback\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction readFile(name: string, options: ReadFileOptions = {}, callback: Callback = (): void => {}): void {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options.lock = options.lock || false;\n  options.parse = options.parse || false;\n\n  const lock = function(options: ReadFileOptions): Promise<null | NodeJS.ErrnoException> {\n    return new Promise((resolve, reject): void => {\n      if (!options.lock) {\n        return resolve(null);\n      }\n\n      lockFile(name, function(err: NodeJS.ErrnoException | null) {\n        if (err) {\n          return reject(err);\n        }\n        return resolve(null);\n      });\n    });\n  };\n\n  const read = function(): Promise<NodeJS.ErrnoException | string> {\n    return new Promise((resolve, reject): void => {\n      fs.readFile(name, 'utf8', function(err, contents) {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(contents);\n      });\n    });\n  };\n\n  const parseJSON = function(contents: string): Promise<unknown> {\n    return new Promise((resolve, reject): void => {\n      if (!options.parse) {\n        return resolve(contents);\n      }\n      try {\n        contents = JSON.parse(contents);\n        return resolve(contents);\n      } catch (err) {\n        return reject(err);\n      }\n    });\n  };\n\n  Promise.resolve()\n    .then(() => lock(options))\n    .then(() => read())\n    .then(content => parseJSON(content as string))\n    .then(\n      result => callback(null, result),\n      err => callback(err)\n    );\n}\n\nexport { readFile };\n"],"mappings":";;;;;;;AAAA;;AAIA;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,CAAkBC,IAAlB,EAAgCC,OAAwB,GAAG,EAA3D,EAA+DC,QAAkB,GAAG,MAAY,CAAE,CAAlG,EAA0G;EACxG,IAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;IACjCC,QAAQ,GAAGD,OAAX;IACAA,OAAO,GAAG,EAAV;EACD;;EAEDA,OAAO,CAACE,IAAR,GAAeF,OAAO,CAACE,IAAR,IAAgB,KAA/B;EACAF,OAAO,CAACG,KAAR,GAAgBH,OAAO,CAACG,KAAR,IAAiB,KAAjC;;EAEA,MAAMD,IAAI,GAAG,UAASF,OAAT,EAA0E;IACrF,OAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAA2B;MAC5C,IAAI,CAACN,OAAO,CAACE,IAAb,EAAmB;QACjB,OAAOG,OAAO,CAAC,IAAD,CAAd;MACD;;MAED,IAAAE,kBAAA,EAASR,IAAT,EAAe,UAASS,GAAT,EAA4C;QACzD,IAAIA,GAAJ,EAAS;UACP,OAAOF,MAAM,CAACE,GAAD,CAAb;QACD;;QACD,OAAOH,OAAO,CAAC,IAAD,CAAd;MACD,CALD;IAMD,CAXM,CAAP;EAYD,CAbD;;EAeA,MAAMI,IAAI,GAAG,YAAoD;IAC/D,OAAO,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAA2B;MAC5CI,WAAA,CAAGZ,QAAH,CAAYC,IAAZ,EAAkB,MAAlB,EAA0B,UAASS,GAAT,EAAcG,QAAd,EAAwB;QAChD,IAAIH,GAAJ,EAAS;UACP,OAAOF,MAAM,CAACE,GAAD,CAAb;QACD;;QAEDH,OAAO,CAACM,QAAD,CAAP;MACD,CAND;IAOD,CARM,CAAP;EASD,CAVD;;EAYA,MAAMC,SAAS,GAAG,UAASD,QAAT,EAA6C;IAC7D,OAAO,IAAIP,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAA2B;MAC5C,IAAI,CAACN,OAAO,CAACG,KAAb,EAAoB;QAClB,OAAOE,OAAO,CAACM,QAAD,CAAd;MACD;;MACD,IAAI;QACFA,QAAQ,GAAGE,IAAI,CAACV,KAAL,CAAWQ,QAAX,CAAX;QACA,OAAON,OAAO,CAACM,QAAD,CAAd;MACD,CAHD,CAGE,OAAOH,GAAP,EAAY;QACZ,OAAOF,MAAM,CAACE,GAAD,CAAb;MACD;IACF,CAVM,CAAP;EAWD,CAZD;;EAcAJ,OAAO,CAACC,OAAR,GACGS,IADH,CACQ,MAAMZ,IAAI,CAACF,OAAD,CADlB,EAEGc,IAFH,CAEQ,MAAML,IAAI,EAFlB,EAGGK,IAHH,CAGQC,OAAO,IAAIH,SAAS,CAACG,OAAD,CAH5B,EAIGD,IAJH,CAKIE,MAAM,IAAIf,QAAQ,CAAC,IAAD,EAAOe,MAAP,CALtB,EAMIR,GAAG,IAAIP,QAAQ,CAACO,GAAD,CANnB;AAQD"}