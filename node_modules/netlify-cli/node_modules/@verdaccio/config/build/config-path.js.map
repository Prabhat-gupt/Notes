{"version":3,"file":"config-path.js","names":["CONFIG_FILE","XDG","WIN","WIN32","pkgJSON","name","debug","buildDebug","findConfigFile","configPath","path","resolve","configPaths","getConfigPaths","length","_","isEmpty","Error","primaryConf","find","configLocation","fileExists","createConfigFile","head","createConfigFolder","defaultConfig","updateStorageLinks","readDefaultConfig","fs","writeFileSync","pathDefaultConf","__dirname","accessSync","constants","R_OK","TypeError","readFileSync","CHARACTER_ENCODING","UTF8","mkdirSync","dirname","recursive","type","dataDir","process","env","XDG_DATA_HOME","join","HOME","folderExists","replace","listPaths","getXDGDirectory","getWindowsDirectory","getRelativeDefaultDirectory","getOldDirectory","reduce","acc","currentValue","push","xDGConfigPath","XDG_CONFIG_HOME","platform","APPDATA"],"sources":["../src/config-path.ts"],"sourcesContent":["import buildDebug from 'debug';\nimport fs from 'fs';\nimport _ from 'lodash';\nimport path from 'path';\n\nimport { CHARACTER_ENCODING } from '@verdaccio/core';\n\nimport { fileExists, folderExists } from './config-utils';\n\nconst CONFIG_FILE = 'config.yaml';\nconst XDG = 'xdg';\nconst WIN = 'win';\nconst WIN32 = 'win32';\n// eslint-disable-next-line\nconst pkgJSON = {\n  name: 'verdaccio',\n};\n\nexport type SetupDirectory = {\n  path: string;\n  type: string;\n};\n\nconst debug = buildDebug('verdaccio:config');\n\n/**\n * Find and get the first config file that match.\n * @return {String} the config file path\n */\nfunction findConfigFile(configPath?: string): string {\n  // console.log(process.env);\n  if (typeof configPath !== 'undefined') {\n    return path.resolve(configPath);\n  }\n\n  const configPaths: SetupDirectory[] = getConfigPaths();\n  debug('%o posible locations found', configPaths.length);\n  if (_.isEmpty(configPaths)) {\n    // this should never happens\n    throw new Error('no configuration files can be processed');\n  }\n\n  // find the first location that already exist\n  const primaryConf: SetupDirectory | void = _.find(configPaths, (configLocation: SetupDirectory) =>\n    fileExists(configLocation.path)\n  );\n\n  if (typeof primaryConf !== 'undefined') {\n    debug('previous location exist already %s', primaryConf?.path);\n    return primaryConf.path;\n  }\n\n  // @ts-ignore\n  return createConfigFile(_.head(configPaths)).path;\n}\n\nfunction createConfigFile(configLocation: SetupDirectory): SetupDirectory {\n  createConfigFolder(configLocation);\n\n  const defaultConfig = updateStorageLinks(configLocation, readDefaultConfig());\n\n  fs.writeFileSync(configLocation.path, defaultConfig);\n\n  return configLocation;\n}\n\nexport function readDefaultConfig(): Buffer {\n  const pathDefaultConf: string = path.resolve(__dirname, 'conf/default.yaml');\n  try {\n    debug('default configuration file %s', pathDefaultConf);\n    fs.accessSync(pathDefaultConf, fs.constants.R_OK);\n  } catch {\n    throw new TypeError('configuration file does not have enough permissions for reading');\n  }\n  // @ts-ignore\n  return fs.readFileSync(pathDefaultConf, CHARACTER_ENCODING.UTF8);\n}\n\nfunction createConfigFolder(configLocation): void {\n  fs.mkdirSync(path.dirname(configLocation.path), { recursive: true });\n  debug(`Creating default config file in %o`, configLocation?.path);\n}\n\nfunction updateStorageLinks(configLocation, defaultConfig): string {\n  if (configLocation.type !== XDG) {\n    return defaultConfig;\n  }\n\n  // $XDG_DATA_HOME defines the base directory relative to which user specific data\n  // files should be stored, If $XDG_DATA_HOME is either not set or empty, a default\n  // equal to $HOME/.local/share should be used.\n  let dataDir =\n    process.env.XDG_DATA_HOME || path.join(process.env.HOME as string, '.local', 'share');\n  if (folderExists(dataDir)) {\n    debug(`previous storage located`);\n    debug(`update storage links to %s`, dataDir);\n    dataDir = path.resolve(path.join(dataDir, pkgJSON.name, 'storage'));\n    return defaultConfig.replace(/^storage: .\\/storage$/m, `storage: ${dataDir}`);\n  }\n  debug(`could not find a previous storage location, skip override`);\n  return defaultConfig;\n}\n\n/**\n * Return a list of configuration locations by platform.\n * @returns\n */\nfunction getConfigPaths(): SetupDirectory[] {\n  const listPaths: (SetupDirectory | void)[] = [\n    getXDGDirectory(),\n    getWindowsDirectory(),\n    getRelativeDefaultDirectory(),\n    getOldDirectory(),\n  ];\n\n  return listPaths.reduce(function (acc, currentValue: SetupDirectory | void): SetupDirectory[] {\n    if (typeof currentValue !== 'undefined') {\n      debug('directory detected path %s for type %s', currentValue?.path, currentValue.type);\n      acc.push(currentValue);\n    }\n    return acc;\n  }, [] as SetupDirectory[]);\n}\n\n/**\n * Get XDG_CONFIG_HOME or HOME location (usually unix)\n * @returns\n */\nconst getXDGDirectory = (): SetupDirectory | void => {\n  const xDGConfigPath =\n    process.env.XDG_CONFIG_HOME || (process.env.HOME && path.join(process.env.HOME, '.config'));\n  if (xDGConfigPath && folderExists(xDGConfigPath)) {\n    debug('XDGConfig folder path %s', xDGConfigPath);\n    return {\n      path: path.join(xDGConfigPath, pkgJSON.name, CONFIG_FILE),\n      type: XDG,\n    };\n  }\n};\n\n/**\n * Detect windows location, APPDATA\n * usually something like C:\\User\\<Build User>\\AppData\\Local\n * @returns\n */\nconst getWindowsDirectory = (): SetupDirectory | void => {\n  if (process.platform === WIN32 && process.env.APPDATA && folderExists(process.env.APPDATA)) {\n    debug('is windows appdata: %s', process.env.APPDATA);\n    return {\n      path: path.resolve(path.join(process.env.APPDATA, pkgJSON.name, CONFIG_FILE)),\n      type: WIN,\n    };\n  }\n};\n\n/**\n * Return relative directory, this is the default.\n * It will cretate config in your {currentLocation/verdaccio/config.yaml}\n * @returns\n */\nconst getRelativeDefaultDirectory = (): SetupDirectory => {\n  return {\n    path: path.resolve(path.join('.', pkgJSON.name, CONFIG_FILE)),\n    type: 'def',\n  };\n};\n\n/**\n * This should never happens, consider it DEPRECATED\n * @returns\n */\nconst getOldDirectory = (): SetupDirectory => {\n  return {\n    path: path.resolve(path.join('.', CONFIG_FILE)),\n    type: 'old',\n  };\n};\n\nexport { findConfigFile };\n"],"mappings":"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"}