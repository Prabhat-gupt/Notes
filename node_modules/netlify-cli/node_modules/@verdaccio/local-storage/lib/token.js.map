{"version":3,"file":"token.js","names":["debug","buildDebug","TOKEN_DB_NAME","TokenActions","constructor","config","tokenDb","_dbGenPath","dbName","Path","join","resolve","dirname","self_path","storage","getTokenDb","adapter","process","env","NODE_ENV","FileMemory","pathDb","FileAsync","low","saveToken","token","key","db","userData","get","user","value","_","isNil","set","write","push","getState","deleteToken","tokenKey","userTokens","Error","length","remainingTokens","filter","readTokens","tokens"],"sources":["../src/token.ts"],"sourcesContent":["import Path from 'path';\n\nimport _ from 'lodash';\nimport low from 'lowdb';\nimport FileAsync from 'lowdb/adapters/FileAsync';\nimport FileMemory from 'lowdb/adapters/Memory';\nimport buildDebug from 'debug';\nimport { ITokenActions, Config, Token, TokenFilter } from '@verdaccio/types';\n\nconst debug = buildDebug('verdaccio:plugin:local-storage:token');\n\nconst TOKEN_DB_NAME = '.token-db.json';\n\nexport default class TokenActions implements ITokenActions {\n  public config: Config;\n  public tokenDb: low.LowdbAsync<any> | null;\n\n  public constructor(config: Config) {\n    this.config = config;\n    this.tokenDb = null;\n  }\n\n  public _dbGenPath(dbName: string, config: Config): string {\n    return Path.join(\n      Path.resolve(Path.dirname(config.self_path || ''), config.storage as string, dbName)\n    );\n  }\n\n  private async getTokenDb(): Promise<low.LowdbAsync<any>> {\n    if (!this.tokenDb) {\n      debug('token database is not defined');\n      let adapter;\n      if (process.env.NODE_ENV === 'test') {\n        debug('token memory adapter');\n        adapter = new FileMemory('');\n      } else {\n        debug('token async adapter');\n        const pathDb = this._dbGenPath(TOKEN_DB_NAME, this.config);\n        adapter = new FileAsync(pathDb);\n      }\n      debug('token bd generated');\n      this.tokenDb = await low(adapter);\n    }\n\n    return this.tokenDb;\n  }\n\n  public async saveToken(token: Token): Promise<void> {\n    debug('token key %o', token.key);\n    const db = await this.getTokenDb();\n    const userData = await db.get(token.user).value();\n    debug('user data %o', userData);\n    if (_.isNil(userData)) {\n      await db.set(token.user, [token]).write();\n      debug('token user %o new database', token.user);\n    } else {\n      // types does not match with valid implementation\n      // @ts-ignore\n      await db\n        .get(token.user)\n        // @ts-ignore\n        .push(token)\n        .write();\n    }\n    debug('data %o', await db.getState());\n    debug('token saved %o', token.user);\n  }\n\n  public async deleteToken(user: string, tokenKey: string): Promise<void> {\n    const db = await this.getTokenDb();\n    const userTokens = await db.get(user).value();\n    if (_.isNil(userTokens)) {\n      throw new Error('user not found');\n    }\n    debug('tokens %o - %o', userTokens, userTokens.length);\n    const remainingTokens = userTokens.filter(({ key }) => {\n      debug('key %o', key);\n      return key !== tokenKey;\n    });\n    await db.set(user, remainingTokens).write();\n    debug('removed tokens key %o', tokenKey);\n  }\n\n  public async readTokens(filter: TokenFilter): Promise<Token[]> {\n    const { user } = filter;\n    debug('read tokens with %o', user);\n    const db = await this.getTokenDb();\n    const tokens = await db.get(user).value();\n    return tokens || [];\n  }\n}\n"],"mappings":"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"}