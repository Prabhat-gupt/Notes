{"version":3,"file":"local-fs.js","names":["fileExist","noSuchFile","resourceNotAvailable","pkgFileName","debug","buildDebug","fSError","message","code","err","getCode","tempFile","str","String","Math","random","substr","renameTmp","src","dst","_cb","cb","fs","unlink","process","platform","rename","tmp","LocalFS","constructor","path","logger","updatePackage","name","updateHandler","onWrite","transformPackage","onEnd","_lockAndReadJSON","json","locked","self","unLockCallback","lockError","_args","arguments","_unlockJSON","apply","_","isNil","getInternalError","getNotFound","deletePackage","packageName","callback","_getStorage","removePackage","rmdir","createPackage","value","_createFile","_convertToString","savePackage","_writeFile","readPackage","_readStorageFile","then","res","data","JSON","parse","toString","writeTarball","uploadStream","UploadTarball","_ended","on","pathName","access","fileNotFound","exists","emit","temporalName","join","replace","file","createWriteStream","removeTempFile","opened","pipe","done","onend","end","abort","readTarball","readTarballStream","ReadTarball","readStream","createReadStream","fd","fstat","stats","size","close","contents","open","Promise","resolve","reject","readFile","stringify","fileName","storagePath","dest","createTempFile","tempFilePath","writeFile","mkdirp","dirname","catch","lock","unlockFile"],"sources":["../src/local-fs.ts"],"sourcesContent":["/* eslint-disable no-undef */\n\nimport fs from 'fs';\nimport path from 'path';\n\nimport buildDebug from 'debug';\nimport _ from 'lodash';\nimport mkdirp from 'mkdirp';\nimport { UploadTarball, ReadTarball } from '@verdaccio/streams';\nimport { unlockFile, readFile } from '@verdaccio/file-locking';\nimport { Callback, Logger, Package, ILocalPackageManager, IUploadTarball } from '@verdaccio/types';\nimport { getCode, getInternalError, getNotFound, VerdaccioError } from '@verdaccio/commons-api';\n\nexport const fileExist = 'EEXISTS';\nexport const noSuchFile = 'ENOENT';\nexport const resourceNotAvailable = 'EAGAIN';\nexport const pkgFileName = 'package.json';\n\nconst debug = buildDebug('verdaccio:plugin:local-storage:fs');\n\nexport const fSError = function(message: string, code = 409): VerdaccioError {\n  const err: VerdaccioError = getCode(code, message);\n  // FIXME: we should return http-status codes here instead, future improvement\n  // @ts-ignore\n  err.code = message;\n\n  return err;\n};\n\nconst tempFile = function(str): string {\n  return `${str}.tmp${String(Math.random()).substr(2)}`;\n};\n\nconst renameTmp = function(src, dst, _cb): void {\n  const cb = (err): void => {\n    if (err) {\n      fs.unlink(src, () => {});\n    }\n    _cb(err);\n  };\n\n  if (process.platform !== 'win32') {\n    return fs.rename(src, dst, cb);\n  }\n\n  // windows can't remove opened file,\n  // but it seem to be able to rename it\n  const tmp = tempFile(dst);\n  fs.rename(dst, tmp, function(err) {\n    fs.rename(src, dst, cb);\n    if (!err) {\n      fs.unlink(tmp, () => {});\n    }\n  });\n};\n\nexport type ILocalFSPackageManager = ILocalPackageManager & { path: string };\n\nexport default class LocalFS implements ILocalFSPackageManager {\n  public path: string;\n  public logger: Logger;\n\n  public constructor(path: string, logger: Logger) {\n    this.path = path;\n    this.logger = logger;\n  }\n\n  /**\n    *  This function allows to update the package thread-safely\n      Algorithm:\n      1. lock package.json for writing\n      2. read package.json\n      3. updateFn(pkg, cb), and wait for cb\n      4. write package.json.tmp\n      5. move package.json.tmp package.json\n      6. callback(err?)\n    * @param {*} name\n    * @param {*} updateHandler\n    * @param {*} onWrite\n    * @param {*} transformPackage\n    * @param {*} onEnd\n    */\n  public updatePackage(\n    name: string,\n    updateHandler: Callback,\n    onWrite: Callback,\n    transformPackage: Function,\n    onEnd: Callback\n  ): void {\n    this._lockAndReadJSON(pkgFileName, (err, json) => {\n      let locked = false;\n      const self = this;\n      // callback that cleans up lock first\n      const unLockCallback = function(lockError: Error): void {\n        // eslint-disable-next-line prefer-rest-params\n        const _args = arguments;\n\n        if (locked) {\n          self._unlockJSON(pkgFileName, () => {\n            // ignore any error from the unlock\n            if (lockError !== null) {\n              debug('lock file: %o has failed with error %o', name, lockError);\n            }\n\n            onEnd.apply(lockError, _args);\n          });\n        } else {\n          debug('file: %o has been updated', name);\n          onEnd(..._args);\n        }\n      };\n\n      if (!err) {\n        locked = true;\n        debug('file: %o has been locked', name);\n      }\n\n      if (_.isNil(err) === false) {\n        if (err.code === resourceNotAvailable) {\n          return unLockCallback(getInternalError('resource temporarily unavailable'));\n        } else if (err.code === noSuchFile) {\n          return unLockCallback(getNotFound());\n        } else {\n          return unLockCallback(err);\n        }\n      }\n\n      updateHandler(json, err => {\n        if (err) {\n          return unLockCallback(err);\n        }\n\n        onWrite(name, transformPackage(json), unLockCallback);\n      });\n    });\n  }\n\n  public deletePackage(packageName: string, callback: (err: NodeJS.ErrnoException | null) => void): void {\n    debug('delete a package %o', packageName);\n\n    return fs.unlink(this._getStorage(packageName), callback);\n  }\n\n  public removePackage(callback: (err: NodeJS.ErrnoException | null) => void): void {\n    debug('remove a package %o', this.path);\n\n    fs.rmdir(this._getStorage('.'), callback);\n  }\n\n  public createPackage(name: string, value: Package, cb: Callback): void {\n    debug('create a package %o', name);\n\n    this._createFile(this._getStorage(pkgFileName), this._convertToString(value), cb);\n  }\n\n  public savePackage(name: string, value: Package, cb: Callback): void {\n    debug('save a package %o', name);\n\n    this._writeFile(this._getStorage(pkgFileName), this._convertToString(value), cb);\n  }\n\n  public readPackage(name: string, cb: Callback): void {\n    debug('read a package %o', name);\n\n    this._readStorageFile(this._getStorage(pkgFileName)).then(\n      res => {\n        try {\n          const data: any = JSON.parse(res.toString('utf8'));\n\n          debug('read storage file %o has succeed', name);\n          cb(null, data);\n        } catch (err) {\n          debug('parse storage file %o has failed with error %o', name, err);\n          cb(err);\n        }\n      },\n      err => {\n        debug('read storage file %o has failed with error %o', name, err);\n\n        return cb(err);\n      }\n    );\n  }\n\n  public writeTarball(name: string): IUploadTarball {\n    const uploadStream = new UploadTarball({});\n    debug('write a tarball for a package %o', name);\n\n    let _ended = 0;\n    uploadStream.on('end', function() {\n      _ended = 1;\n    });\n\n    const pathName: string = this._getStorage(name);\n\n    fs.access(pathName, fileNotFound => {\n      const exists = !fileNotFound;\n      if (exists) {\n        uploadStream.emit('error', fSError(fileExist));\n      } else {\n        const temporalName = path.join(this.path, `${name}.tmp-${String(Math.random()).replace(/^0\\./, '')}`);\n        debug('write a temporal name %o', temporalName);\n        const file = fs.createWriteStream(temporalName);\n        const removeTempFile = (): void => fs.unlink(temporalName, () => {});\n        let opened = false;\n        uploadStream.pipe(file);\n\n        uploadStream.done = function(): void {\n          const onend = function(): void {\n            file.on('close', function() {\n              renameTmp(temporalName, pathName, function(err) {\n                if (err) {\n                  uploadStream.emit('error', err);\n                } else {\n                  uploadStream.emit('success');\n                }\n              });\n            });\n            file.end();\n          };\n          if (_ended) {\n            onend();\n          } else {\n            uploadStream.on('end', onend);\n          }\n        };\n\n        uploadStream.abort = function(): void {\n          if (opened) {\n            opened = false;\n            file.on('close', function() {\n              removeTempFile();\n            });\n          } else {\n            // if the file does not recieve any byte never is opened and has to be removed anyway.\n            removeTempFile();\n          }\n          file.end();\n        };\n\n        file.on('open', function() {\n          opened = true;\n          // re-emitting open because it's handled in storage.js\n          uploadStream.emit('open');\n        });\n\n        file.on('error', function(err) {\n          uploadStream.emit('error', err);\n        });\n      }\n    });\n\n    return uploadStream;\n  }\n\n  public readTarball(name: string): ReadTarball {\n    const pathName: string = this._getStorage(name);\n    debug('read a a tarball %o on path %o', name, pathName);\n\n    const readTarballStream = new ReadTarball({});\n\n    const readStream = fs.createReadStream(pathName);\n\n    readStream.on('error', function(err) {\n      debug('error on read a tarball %o with error %o', name, err);\n      readTarballStream.emit('error', err);\n    });\n\n    readStream.on('open', function(fd) {\n      fs.fstat(fd, function(err, stats) {\n        if (_.isNil(err) === false) {\n          debug('error on read a tarball %o with error %o', name, err);\n          return readTarballStream.emit('error', err);\n        }\n        readTarballStream.emit('content-length', stats.size);\n        readTarballStream.emit('open');\n        debug('open on read a tarball %o', name);\n        readStream.pipe(readTarballStream);\n      });\n    });\n\n    readTarballStream.abort = function(): void {\n      debug('abort on read a tarball %o', name);\n      readStream.close();\n    };\n\n    return readTarballStream;\n  }\n\n  private _createFile(name: string, contents: any, callback: Function): void {\n    debug(' create a new file: %o', name);\n\n    fs.open(name, 'wx', err => {\n      if (err) {\n        // native EEXIST used here to check exception on fs.open\n        if (err.code === 'EEXIST') {\n          debug('file %o cannot be created, it already exists: %o', name);\n          return callback(fSError(fileExist));\n        }\n      }\n\n      this._writeFile(name, contents, callback);\n    });\n  }\n\n  private _readStorageFile(name: string): Promise<any> {\n    return new Promise((resolve, reject): void => {\n      debug('reading the file: %o', name);\n\n      fs.readFile(name, (err, data) => {\n        if (err) {\n          debug('error reading the file: %o with error %o', name, err);\n          reject(err);\n        } else {\n          debug('read file %o succeed', name);\n\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  private _convertToString(value: Package): string {\n    return JSON.stringify(value, null, '\\t');\n  }\n\n  private _getStorage(fileName = ''): string {\n    const storagePath: string = path.join(this.path, fileName);\n\n    return storagePath;\n  }\n\n  private _writeFile(dest: string, data: string, cb: Callback): void {\n    const createTempFile = (cb): void => {\n      const tempFilePath = tempFile(dest);\n\n      fs.writeFile(tempFilePath, data, err => {\n        if (err) {\n          debug('error on write the file: %o', dest);\n          return cb(err);\n        }\n\n        debug('creating a new file:: %o', dest);\n        renameTmp(tempFilePath, dest, cb);\n      });\n    };\n\n    createTempFile(err => {\n      if (err && err.code === noSuchFile) {\n        mkdirp(path.dirname(dest))\n          .then(() => {\n            createTempFile(cb);\n          })\n          .catch(err => {\n            return cb(err);\n          });\n      } else {\n        cb(err);\n      }\n    });\n  }\n\n  private _lockAndReadJSON(name: string, cb: Function): void {\n    const fileName: string = this._getStorage(name);\n\n    readFile(\n      fileName,\n      {\n        lock: true,\n        parse: true,\n      },\n      (err, res) => {\n        if (err) {\n          debug('error on lock and read json for file: %o', name);\n\n          return cb(err);\n        }\n        debug('lock and read json for file: %o', name);\n\n        return cb(null, res);\n      }\n    );\n  }\n\n  private _unlockJSON(name: string, cb: Function): void {\n    unlockFile(this._getStorage(name), cb);\n  }\n}\n"],"mappings":"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"}