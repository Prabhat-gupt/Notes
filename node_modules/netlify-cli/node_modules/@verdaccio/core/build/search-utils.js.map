{"version":3,"file":"search-utils.js","names":["UNSCOPED"],"sources":["../src/search-utils.ts"],"sourcesContent":["export type SearchMetrics = {\n  quality: number;\n  popularity: number;\n  maintenance: number;\n};\nexport type UnStable = {\n  flags?: {\n    // if is false is not be included in search results (majority are stable)\n    unstable?: boolean;\n  };\n};\nexport type SearchItemPkg = {\n  name: string;\n  scoped?: string;\n  path?: string;\n  time?: number | Date;\n};\n\ntype PrivatePackage = {\n  // note: prefixed to avoid external conflicts\n\n  // the package is published as private\n  verdaccioPrivate?: boolean;\n  // if the package is not private but is cached\n  verdaccioPkgCached?: boolean;\n};\n\nexport interface SearchItem extends UnStable, PrivatePackage {\n  package: SearchItemPkg;\n  score: Score;\n}\n\nexport type Score = {\n  final: number;\n  detail: SearchMetrics;\n};\n\nexport type SearchResults = {\n  objects: SearchItemPkg[];\n  total: number;\n  time: string;\n};\n\n// @deprecated use @verdaccio/types\ntype PublisherMaintainer = {\n  username: string;\n  email: string;\n};\n\n// @deprecated use @verdaccio/types\nexport type SearchPackageBody = {\n  name: string;\n  scope: string;\n  description: string;\n  author: string | PublisherMaintainer;\n  version: string;\n  keywords: string | string[] | undefined;\n  date: string;\n  links?: {\n    npm: string; // only include placeholder for URL eg: {url}/{packageName}\n    homepage?: string;\n    repository?: string;\n    bugs?: string;\n  };\n  publisher?: any;\n  maintainers?: PublisherMaintainer[];\n};\n\nexport interface SearchPackageItem extends UnStable, PrivatePackage {\n  package: SearchPackageBody;\n  score: Score;\n  searchScore?: number;\n}\n\nexport const UNSCOPED = 'unscoped';\n\nexport type SearchQuery = {\n  text: string;\n  size?: number;\n  from?: number;\n} & SearchMetrics;\n"],"mappings":";;;;;;AA2CA;;AAMA;;AAyBO,MAAMA,QAAQ,GAAG,UAAU;AAAC"}