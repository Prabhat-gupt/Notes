{"version":3,"file":"file-utils.js","names":["Files","DatabaseName","mkdir","mkdtemp","fs","promises","require","createTempFolder","prefix","path","join","os","tmpdir","createTempStorageFolder","folder","tempFolder","storageFolder"],"sources":["../src/file-utils.ts"],"sourcesContent":["import fs from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nexport const Files = {\n  DatabaseName: '.verdaccio-db.json',\n};\n\nconst { mkdir, mkdtemp } = fs.promises ? fs.promises : require('fs/promises');\n\n/**\n * Create a temporary folder.\n * @param prefix The prefix of the folder name.\n * @returns string\n */\nexport async function createTempFolder(prefix: string): Promise<string> {\n  return await mkdtemp(path.join(os.tmpdir(), prefix));\n}\n\n/**\n * Create temporary folder for an asset.\n * @param prefix\n * @param folder name\n * @returns\n */\nexport async function createTempStorageFolder(prefix: string, folder = 'storage'): Promise<string> {\n  const tempFolder = await createTempFolder(prefix);\n  const storageFolder = path.join(tempFolder, folder);\n  await mkdir(storageFolder);\n  return storageFolder;\n}\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AAAwB;AAEjB,MAAMA,KAAK,GAAG;EACnBC,YAAY,EAAE;AAChB,CAAC;AAAC;AAEF,MAAM;EAAEC,KAAK;EAAEC;AAAQ,CAAC,GAAGC,WAAE,CAACC,QAAQ,GAAGD,WAAE,CAACC,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAE7E;AACA;AACA;AACA;AACA;AACO,eAAeC,gBAAgB,CAACC,MAAc,EAAmB;EACtE,OAAO,MAAML,OAAO,CAACM,aAAI,CAACC,IAAI,CAACC,WAAE,CAACC,MAAM,EAAE,EAAEJ,MAAM,CAAC,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeK,uBAAuB,CAACL,MAAc,EAAEM,MAAM,GAAG,SAAS,EAAmB;EACjG,MAAMC,UAAU,GAAG,MAAMR,gBAAgB,CAACC,MAAM,CAAC;EACjD,MAAMQ,aAAa,GAAGP,aAAI,CAACC,IAAI,CAACK,UAAU,EAAED,MAAM,CAAC;EACnD,MAAMZ,KAAK,CAACc,aAAa,CAAC;EAC1B,OAAOA,aAAa;AACtB"}