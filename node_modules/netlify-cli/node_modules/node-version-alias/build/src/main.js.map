{"version":3,"sources":["../../src/main.js"],"names":["normalizeNodeVersion","semver","getConstantAlias","getLtsAlias","getNvmCustomAlias","getOpts","nodeVersionAlias","alias","opts","allNodeOpts","normalizeOpts","versionRange","getVersionRange","undefined","Error","version","validRange","versionRangeA","getRecursiveNvmAlias","aliasResult"],"mappings":"AAAA,MAAOA,CAAAA,oBAAP,KAAiC,wBAAjC;AACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB;;AAEA,OAASC,gBAAT,KAAiC,eAAjC;AACA,OAASC,WAAT,KAA4B,UAA5B;AACA,OAASC,iBAAT,KAAkC,UAAlC;AACA,OAASC,OAAT,KAAwB,cAAxB;;;;AAIA,cAAe,eAAeC,CAAAA,gBAAf,CAAgCC,KAAhC,CAAuCC,IAAvC,CAA6C;AAC1D,KAAM,CAAEC,WAAF,CAAeC,aAAf,EAAiCL,OAAO,CAACG,IAAD,CAA9C;AACA,KAAMG,CAAAA,YAAY,CAAG,KAAMC,CAAAA,eAAe,CAACL,KAAD,CAAQE,WAAR,CAA1C;;AAEA,GAAIE,YAAY,GAAKE,SAArB,CAAgC;AAC9B,KAAM,IAAIC,CAAAA,KAAJ,CAAW,kCAAiCP,KAAM,EAAlD,CAAN;AACD;;AAED,KAAMQ,CAAAA,OAAO,CAAG,KAAMf,CAAAA,oBAAoB,CAACW,YAAD,CAAeD,aAAf,CAA1C;AACA,MAAOK,CAAAA,OAAP;AACD;;AAED,KAAMH,CAAAA,eAAe,CAAG,eAAgBL,KAAhB,CAAuBE,WAAvB,CAAoC;AAC1D,GAAIR,MAAM,CAACe,UAAP,CAAkBT,KAAlB,IAA6B,IAAjC,CAAuC;AACrC,MAAOA,CAAAA,KAAP;AACD;;AAED,KAAMI,CAAAA,YAAY,CAAG,KAAMT,CAAAA,gBAAgB,CAACK,KAAD,CAA3C;;AAEA,GAAII,YAAY,GAAKE,SAArB,CAAgC;AAC9B,MAAOF,CAAAA,YAAP;AACD;;AAED,KAAMM,CAAAA,aAAa,CAAG,KAAMd,CAAAA,WAAW,CAACI,KAAD,CAAQE,WAAR,CAAvC;;AAEA,GAAIQ,aAAa,GAAKJ,SAAtB,CAAiC;AAC/B,MAAOI,CAAAA,aAAP;AACD;;AAED,MAAOC,CAAAA,oBAAoB,CAACX,KAAD,CAAQE,WAAR,CAA3B;AACD,CAlBD;;;AAqBA,KAAMS,CAAAA,oBAAoB,CAAG,eAAgBX,KAAhB,CAAuBE,WAAvB,CAAoC;AAC/D,KAAMU,CAAAA,WAAW,CAAG,KAAMf,CAAAA,iBAAiB,CAACG,KAAD,CAA3C;;AAEA,GAAIY,WAAW,GAAKN,SAApB,CAA+B;AAC7B;AACD;;AAED,MAAOD,CAAAA,eAAe,CAACO,WAAD,CAAcV,WAAd,CAAtB;AACD,CARD","sourcesContent":["import normalizeNodeVersion from 'normalize-node-version'\nimport semver from 'semver'\n\nimport { getConstantAlias } from './constant.js'\nimport { getLtsAlias } from './lts.js'\nimport { getNvmCustomAlias } from './nvm.js'\nimport { getOpts } from './options.js'\n\n// Resolve Node.js version managers aliases like `latest`, `lts` or `erbium`.\n// First resolve them to a version range, then to a full version.\nexport default async function nodeVersionAlias(alias, opts) {\n  const { allNodeOpts, normalizeOpts } = getOpts(opts)\n  const versionRange = await getVersionRange(alias, allNodeOpts)\n\n  if (versionRange === undefined) {\n    throw new Error(`Invalid Node.js version alias: ${alias}`)\n  }\n\n  const version = await normalizeNodeVersion(versionRange, normalizeOpts)\n  return version\n}\n\nconst getVersionRange = async function (alias, allNodeOpts) {\n  if (semver.validRange(alias) !== null) {\n    return alias\n  }\n\n  const versionRange = await getConstantAlias(alias)\n\n  if (versionRange !== undefined) {\n    return versionRange\n  }\n\n  const versionRangeA = await getLtsAlias(alias, allNodeOpts)\n\n  if (versionRangeA !== undefined) {\n    return versionRangeA\n  }\n\n  return getRecursiveNvmAlias(alias, allNodeOpts)\n}\n\n// nvm custom aliases can be recursive\nconst getRecursiveNvmAlias = async function (alias, allNodeOpts) {\n  const aliasResult = await getNvmCustomAlias(alias)\n\n  if (aliasResult === undefined) {\n    return\n  }\n\n  return getVersionRange(aliasResult, allNodeOpts)\n}\n"],"file":"src/main.js"}