{"version":3,"sources":["../../src/main.js"],"names":["Chalk","getOpts","colorsOption","opts","colors","stream","chalkOpts","level","getLevel","chalk","Instance","terminalLevel","getTerminalLevel","undefined","Math","max","isTTY","DEPTH_TO_LEVEL","getColorDepth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB;;AAEA,OAASC,OAAT,KAAwB,cAAxB;;;;;;;;;;;AAWA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,IAAtB,CAA4B;AACzC,KAAM,CAAEC,MAAF,CAAUC,MAAV,CAAkBC,SAAlB,EAAgCL,OAAO,CAACE,IAAD,CAA7C;;AAEA,KAAMI,CAAAA,KAAK,CAAGC,QAAQ,CAACJ,MAAD,CAASC,MAAT,CAAtB;AACA,KAAMI,CAAAA,KAAK,CAAG,GAAIT,CAAAA,KAAK,CAACU,QAAV,CAAmB,CAAE,GAAGJ,SAAL,CAAgBC,KAAhB,CAAnB,CAAd;AACA,MAAOE,CAAAA,KAAP;AACD;;AAED,KAAMD,CAAAA,QAAQ,CAAG,SAAUJ,MAAV,CAAkBC,MAAlB,CAA0B;AACzC,GAAID,MAAM,GAAK,KAAf,CAAsB;AACpB,MAAO,EAAP;AACD;;AAED,KAAMO,CAAAA,aAAa,CAAGC,gBAAgB,CAACP,MAAD,CAAtC;;AAEA,GAAID,MAAM,GAAKS,SAAf,CAA0B;AACxB,MAAOF,CAAAA,aAAP;AACD;;AAED,MAAOG,CAAAA,IAAI,CAACC,GAAL,CAASJ,aAAT,CAAwB,CAAxB,CAAP;AACD,CAZD;;AAcA,KAAMC,CAAAA,gBAAgB,CAAG,SAAUP,MAAV,CAAkB;AACzC,GAAI,CAACA,MAAM,CAACW,KAAZ,CAAmB;AACjB,MAAO,EAAP;AACD;;AAED,MAAOC,CAAAA,cAAc,CAACZ,MAAM,CAACa,aAAP,EAAD,CAArB;AACD,CAND;;;AASA,KAAMD,CAAAA,cAAc,CAAG,CAAE,EAAG,CAAL,CAAQ,EAAG,CAAX,CAAc,EAAG,CAAjB,CAAoB,GAAI,CAAxB,CAAvB","sourcesContent":["import Chalk from 'chalk'\n\nimport { getOpts } from './options.js'\n\n// Retrieve `chalk` instance.\n// Allows forcing `opts.colors` with `true` or `false` (default: guessed).\n// Use `stdout.getColorDepth()` instead of chalk's default behavior (relying\n// on `supports-color`) because it:\n//  - Handles the `NO_COLOR` and `NODE_DISABLE_COLORS` environment variables\n//  - Does not try to guess the `level` from CLI flags\n//  - Has a simpler priority order between CLI flags, options and environment\n//    variables\n//  - Is built-in Node.js behavior\nexport default function colorsOption(opts) {\n  const { colors, stream, chalkOpts } = getOpts(opts)\n\n  const level = getLevel(colors, stream)\n  const chalk = new Chalk.Instance({ ...chalkOpts, level })\n  return chalk\n}\n\nconst getLevel = function (colors, stream) {\n  if (colors === false) {\n    return 0\n  }\n\n  const terminalLevel = getTerminalLevel(stream)\n\n  if (colors === undefined) {\n    return terminalLevel\n  }\n\n  return Math.max(terminalLevel, 1)\n}\n\nconst getTerminalLevel = function (stream) {\n  if (!stream.isTTY) {\n    return 0\n  }\n\n  return DEPTH_TO_LEVEL[stream.getColorDepth()]\n}\n\n// Maps chalk levels to color depth\nconst DEPTH_TO_LEVEL = { 1: 0, 4: 1, 8: 2, 24: 3 }\n"],"file":"src/main.js"}