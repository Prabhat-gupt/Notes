import { FeatureFlags } from '../../../../feature_flags.js';
import { ModuleFormat } from '../../utils/module_format.js';
import { NodeVersionString } from '../../utils/node_version.js';
declare const versionMap: {
    readonly '8.x': "node8";
    readonly '10.x': "node10";
    readonly '12.x': "node12";
    readonly '14.x': "node14";
    readonly '16.x': "node16";
    readonly '18.x': "node18";
};
type VersionValues = (typeof versionMap)[keyof typeof versionMap];
declare const getBundlerTarget: (suppliedVersion?: NodeVersionString) => VersionValues;
declare const getModuleFormat: (srcDir: string, featureFlags: FeatureFlags, extension: string, configVersion?: string) => Promise<{
    includedFiles: string[];
    moduleFormat: ModuleFormat;
}>;
export { getBundlerTarget, getModuleFormat };
