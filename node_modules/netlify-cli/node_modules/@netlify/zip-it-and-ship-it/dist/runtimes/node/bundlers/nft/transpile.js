import { build } from '@netlify/esbuild';
import { FunctionBundlingUserError } from '../../../../utils/error.js';
import { getBundlerTarget } from '../esbuild/bundler_target.js';
export const transpile = async (path, config, functionName) => {
    // The version of ECMAScript to use as the build target. This will determine
    // whether certain features are transpiled down or left untransformed.
    const nodeTarget = getBundlerTarget(config.nodeVersion);
    try {
        const transpiled = await build({
            bundle: false,
            entryPoints: [path],
            format: "cjs" /* ModuleFormat.COMMONJS */,
            logLevel: 'error',
            platform: 'node',
            sourcemap: Boolean(config.nodeSourcemap),
            target: [nodeTarget],
            write: false,
        });
        return transpiled.outputFiles[0].text;
    }
    catch (error) {
        throw FunctionBundlingUserError.addCustomErrorInfo(error, {
            functionName,
            runtime: "js" /* RuntimeType.JAVASCRIPT */,
            bundler: "nft" /* NodeBundlerType.NFT */,
        });
    }
};
//# sourceMappingURL=transpile.js.map