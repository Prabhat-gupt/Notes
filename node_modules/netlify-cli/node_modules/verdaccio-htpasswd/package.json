{
  "name": "verdaccio-htpasswd",
  "version": "10.5.2",
  "description": "htpasswd auth plugin for Verdaccio",
  "keywords": [
    "verdaccio",
    "plugin",
    "auth",
    "htpasswd"
  ],
  "author": "Ayush Sharma <ayush.aceit@gmail.com>",
  "license": "MIT",
  "homepage": "https://verdaccio.org",
  "repository": {
    "type": "git",
    "url": "https://github.com/verdaccio/monorepo",
    "directory": "plugins/htpasswd"
  },
  "bugs": {
    "url": "https://github.com/verdaccio/monorepo/issues"
  },
  "main": "lib/index.js",
  "types": "lib/index.d.ts",
  "files": [
    "lib"
  ],
  "engines": {
    "node": ">=8"
  },
  "dependencies": {
    "@verdaccio/file-locking": "10.3.0",
    "apache-md5": "1.1.8",
    "bcryptjs": "2.4.3",
    "http-errors": "2.0.0",
    "unix-crypt-td-js": "1.1.4"
  },
  "devDependencies": {
    "@types/bcryptjs": "2.4.2",
    "@verdaccio/types": "10.7.0",
    "mockdate": "3.0.5"
  },
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/verdaccio"
  },
  "scripts": {
    "clean": "rimraf ./build",
    "test": "cross-env NODE_ENV=test BABEL_ENV=test jest",
    "type-check": "tsc --noEmit -p tsconfig.build.json",
    "build:types": "tsc --emitDeclarationOnly -p tsconfig.build.json",
    "build:js": "babel src/ --out-dir lib/ --copy-files --extensions \".ts,.tsx\" --source-maps",
    "watch": "pnpm build:js -- --watch",
    "build": "pnpm run build:js && pnpm run build:types"
  },
  "readme": "[![verdaccio (latest)](https://img.shields.io/npm/v/verdaccio-htpasswd/latest.svg)](https://www.npmjs.com/package/verdaccio-htpasswd)\n[![Known Vulnerabilities](https://snyk.io/test/github/verdaccio/verdaccio-htpasswd/badge.svg?targetFile=package.json)](https://snyk.io/test/github/verdaccio/verdaccio-htpasswd?targetFile=package.json)\n[![CircleCI](https://circleci.com/gh/verdaccio/verdaccio-htpasswd.svg?style=svg)](https://circleci.com/gh/ayusharma/verdaccio-htpasswd) [![codecov](https://codecov.io/gh/ayusharma/verdaccio-htpasswd/branch/master/graph/badge.svg)](https://codecov.io/gh/ayusharma/verdaccio-htpasswd)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fverdaccio%2Fverdaccio-htpasswd.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fverdaccio%2Fverdaccio-htpasswd?ref=badge_shield)\n[![backers](https://opencollective.com/verdaccio/tiers/backer/badge.svg?label=Backer&color=brightgreen)](https://opencollective.com/verdaccio)\n[![discord](https://img.shields.io/discord/388674437219745793.svg)](http://chat.verdaccio.org/)\n![MIT](https://img.shields.io/github/license/mashape/apistatus.svg)\n[![node](https://img.shields.io/node/v/verdaccio-htpasswd/latest.svg)](https://www.npmjs.com/package/verdaccio-htpasswd)\n\n# Verdaccio Module For User Auth Via Htpasswd\n\n`verdaccio-htpasswd` is a default authentication plugin for the [Verdaccio](https://github.com/verdaccio/verdaccio).\n\n> Plugin only valid for verdaccio v5.x\n\n## Install\n\nAs simple as running:\n\n    $ npm install -g verdaccio-htpasswd\n\n## Configure\n\n    auth:\n        htpasswd:\n            file: ./htpasswd\n            # Maximum amount of users allowed to register, defaults to \"+infinity\".\n            # You can set this to -1 to disable registration.\n            #max_users: 1000\n            # Hash algorithm, possible options are: \"bcrypt\", \"md5\", \"sha1\", \"crypt\".\n            # Default algorithm is crypt.\n            #algorithm: bcrypt\n            # Rounds number for \"bcrypt\", will be ignored for other algorithms.\n            # Setting this value higher will result in password verification taking longer.\n            #rounds: 10\n            # Log a warning if the password takes more then this duration in milliseconds to verify.\n            #slow_verify_ms: 200\n\n### Bcrypt rounds\n\nIt is important to note that when using the default `bcrypt` algorithm and setting\nthe `rounds` configuration value to a higher number then the default of `10`, that\nverification of a user password can cause significantly increased CPU usage and\nadditional latency in processing requests.\n\nIf your Verdaccio instance handles a large number of authenticated requests using\nusername and password for authentication, the `rounds` configuration value may need\nto be decreased to prevent excessive CPU usage and request latency.\n\nAlso note that setting the `rounds` configuration value to a value that is too small\nincreases the risk of successful brute force attack. Auth0 has a\n[blog article](https://auth0.com/blog/hashing-in-action-understanding-bcrypt)\nthat provides an overview of how `bcrypt` hashing works and some best practices.\n\n## Logging In\n\nTo log in using NPM, run:\n\n```\n    npm adduser --registry  https://your.registry.local\n```\n\n## Generate htpasswd username/password combination\n\nIf you wish to handle access control using htpasswd file, you can generate\nusername/password combination form\n[here](http://www.htaccesstools.com/htpasswd-generator/) and add it to htpasswd\nfile.\n\n## How does it work?\n\nThe htpasswd file contains rows corresponding to a pair of username and password\nseparated with a colon character. The password is encrypted using the UNIX system's\n`crypt` method and may use MD5 or SHA1.\n\n#### Useful Links\n\n- [Plugin Development](http://www.verdaccio.org/docs/en/dev-plugins.html)\n- [List of Plugins](http://www.verdaccio.org/docs/en/plugins.html)\n\n## License\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fverdaccio%2Fverdaccio-htpasswd.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fverdaccio%2Fverdaccio-htpasswd?ref=badge_large)\n"
}