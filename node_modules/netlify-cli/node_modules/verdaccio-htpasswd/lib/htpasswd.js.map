{"version":3,"file":"htpasswd.js","names":["DEFAULT_SLOW_VERIFY_MS","HTPasswd","constructor","config","options","users","logger","maxUsers","max_users","Infinity","algorithm","rounds","undefined","HtpasswdHashAlgorithm","crypt","info","Error","lastTime","file","bcrypt","DEFAULT_BCRYPT_ROUNDS","warn","algo","hashConfig","path","Path","resolve","dirname","self_path","slowVerifyMs","slow_verify_ms","authenticate","user","password","cb","reload","err","code","passwordValid","start","Date","verifyPassword","durationMs","getTime","message","error","adduser","realCb","pathPass","sanityCheck","then","sanity","lockAndRead","res","locked","unlockFile","body","toString","parseHTPasswd","_writeFile","addUserToHTPasswd","catch","callback","fs","stat","stats","mtime","readFile","buffer","Object","assign","_stringToUt8","authentication","writeFile","changePassword","newPassword","pathPassFile","changePasswordToHTPasswd","content"],"sources":["../src/htpasswd.ts"],"sourcesContent":["import fs from 'fs';\nimport Path from 'path';\n\nimport { Callback, AuthConf, Config, Logger, IPluginAuth, PluginOptions } from '@verdaccio/types';\nimport { unlockFile } from '@verdaccio/file-locking';\n\nimport {\n  HtpasswdHashAlgorithm,\n  HtpasswdHashConfig,\n  verifyPassword,\n  lockAndRead,\n  parseHTPasswd,\n  addUserToHTPasswd,\n  changePasswordToHTPasswd,\n  sanityCheck,\n  DEFAULT_BCRYPT_ROUNDS,\n} from './utils';\n\nexport type HTPasswdConfig = {\n  file: string;\n  algorithm?: HtpasswdHashAlgorithm;\n  rounds?: number;\n  max_users?: number;\n  slow_verify_ms?: number;\n} & Config;\n\nexport const DEFAULT_SLOW_VERIFY_MS = 200;\n\n/**\n * HTPasswd - Verdaccio auth class\n */\nexport default class HTPasswd implements IPluginAuth<HTPasswdConfig> {\n  /**\n   *\n   * @param {*} config htpasswd file\n   * @param {object} stuff config.yaml in object from\n   */\n  private users: {};\n  private maxUsers: number;\n  private path: string;\n  private hashConfig: HtpasswdHashConfig;\n  private slowVerifyMs: number;\n  private logger: Logger;\n  private lastTime: any;\n  // constructor\n  public constructor(config: AuthConf, options: PluginOptions<HTPasswdConfig>) {\n    this.users = {};\n    // verdaccio logger\n    this.logger = options.logger;\n\n    // all this \"verdaccio_config\" stuff is for b/w compatibility only\n    this.maxUsers = config.max_users ? config.max_users : Infinity;\n\n    let algorithm: HtpasswdHashAlgorithm;\n    let rounds: number | undefined;\n\n    if (config.algorithm === undefined) {\n      // to avoid breaking changes we uses crypt, future version\n      // of this plugin uses bcrypt by default\n      // https://github.com/verdaccio/verdaccio/pull/2072#issuecomment-770235502\n      algorithm = HtpasswdHashAlgorithm.crypt;\n      this.logger.info(\n        // eslint-disable-next-line max-len\n        '\"crypt\" algorithm is deprecated consider switch to \"bcrypt\". Read more: https://github.com/verdaccio/monorepo/pull/580'\n      );\n    } else if (HtpasswdHashAlgorithm[config.algorithm] !== undefined) {\n      algorithm = HtpasswdHashAlgorithm[config.algorithm];\n    } else {\n      throw new Error(`Invalid algorithm \"${config.algorithm}\"`);\n    }\n\n    this.lastTime = null;\n\n    const { file } = config;\n    if (!file) {\n      throw new Error('should specify \"file\" in config');\n    }\n\n    if (algorithm === HtpasswdHashAlgorithm.bcrypt) {\n      rounds = config.rounds || DEFAULT_BCRYPT_ROUNDS;\n    } else if (config.rounds !== undefined) {\n      this.logger.warn({ algo: algorithm }, 'Option \"rounds\" is not valid for \"@{algo}\" algorithm');\n    }\n\n    this.hashConfig = {\n      algorithm,\n      rounds,\n    };\n\n    this.path = Path.resolve(Path.dirname(options.config.self_path), file);\n    this.slowVerifyMs = config.slow_verify_ms || DEFAULT_SLOW_VERIFY_MS;\n  }\n\n  /**\n   * authenticate - Authenticate user.\n   * @param {string} user\n   * @param {string} password\n   * @param {function} cb\n   * @returns {function}\n   */\n  public authenticate(user: string, password: string, cb: Callback): void {\n    this.reload(async (err) => {\n      if (err) {\n        return cb(err.code === 'ENOENT' ? null : err);\n      }\n      if (!this.users[user]) {\n        return cb(null, false);\n      }\n\n      let passwordValid = false;\n      try {\n        const start = new Date();\n        passwordValid = await verifyPassword(password, this.users[user]);\n        const durationMs = new Date().getTime() - start.getTime();\n        if (durationMs > this.slowVerifyMs) {\n          this.logger.warn(\n            { user, durationMs },\n            'Password for user \"@{user}\" took @{durationMs}ms to verify'\n          );\n        }\n      } catch ({ message }) {\n        this.logger.error({ message }, 'Unable to verify user password: @{message}');\n      }\n      if (!passwordValid) {\n        return cb(null, false);\n      }\n\n      // authentication succeeded!\n      // return all usergroups this user has access to;\n      // (this particular package has no concept of usergroups, so just return\n      // user herself)\n      return cb(null, [user]);\n    });\n  }\n\n  /**\n   * Add user\n   * 1. lock file for writing (other processes can still read)\n   * 2. reload .htpasswd\n   * 3. write new data into .htpasswd.tmp\n   * 4. move .htpasswd.tmp to .htpasswd\n   * 5. reload .htpasswd\n   * 6. unlock file\n   *\n   * @param {string} user\n   * @param {string} password\n   * @param {function} realCb\n   * @returns {Promise<any>}\n   */\n  public adduser(user: string, password: string, realCb: Callback): void {\n    const pathPass = this.path;\n    sanityCheck(user, password, verifyPassword, this.users, this.maxUsers)\n      .then((sanity) => {\n        // preliminary checks, just to ensure that file won't be reloaded if it's\n        // not needed\n        if (sanity) {\n          return realCb(sanity, false);\n        }\n\n        lockAndRead(pathPass, async (err, res): Promise<void> => {\n          let locked = false;\n\n          // callback that cleans up lock first\n          const cb = (err): void => {\n            if (locked) {\n              unlockFile(pathPass, () => {\n                // ignore any error from the unlock\n                realCb(err, !err);\n              });\n            } else {\n              realCb(err, !err);\n            }\n          };\n\n          if (!err) {\n            locked = true;\n          }\n\n          // ignore ENOENT errors, we'll just create .htpasswd in that case\n          if (err && err.code !== 'ENOENT') {\n            return cb(err);\n          }\n          const body = (res || '').toString('utf8');\n          this.users = parseHTPasswd(body);\n\n          // real checks, to prevent race conditions\n          // parsing users after reading file.\n          sanity = await sanityCheck(user, password, verifyPassword, this.users, this.maxUsers);\n\n          if (sanity) {\n            return cb(sanity);\n          }\n\n          try {\n            this._writeFile(await addUserToHTPasswd(body, user, password, this.hashConfig), cb);\n          } catch (err) {\n            return cb(err);\n          }\n        });\n      })\n      .catch((err) => realCb(err));\n  }\n\n  /**\n   * Reload users\n   * @param {function} callback\n   */\n  public reload(callback: Callback): void {\n    fs.stat(this.path, (err, stats) => {\n      if (err) {\n        return callback(err);\n      }\n      if (this.lastTime === stats.mtime) {\n        return callback();\n      }\n\n      this.lastTime = stats.mtime;\n\n      fs.readFile(this.path, 'utf8', (err, buffer) => {\n        if (err) {\n          return callback(err);\n        }\n\n        Object.assign(this.users, parseHTPasswd(buffer));\n        callback();\n      });\n    });\n  }\n\n  private _stringToUt8(authentication: string): string {\n    return (authentication || '').toString();\n  }\n\n  private _writeFile(body: string, cb: Callback): void {\n    fs.writeFile(this.path, body, (err) => {\n      if (err) {\n        cb(err);\n      } else {\n        this.reload(() => {\n          cb(null);\n        });\n      }\n    });\n  }\n\n  /**\n   * changePassword - change password for existing user.\n   * @param {string} user\n   * @param {string} password\n   * @param {string} newPassword\n   * @param {function} realCb\n   * @returns {function}\n   */\n  public changePassword(\n    user: string,\n    password: string,\n    newPassword: string,\n    realCb: Callback\n  ): void {\n    lockAndRead(this.path, (err, res) => {\n      let locked = false;\n      const pathPassFile = this.path;\n\n      // callback that cleans up lock first\n      const cb = (err): void => {\n        if (locked) {\n          unlockFile(pathPassFile, () => {\n            // ignore any error from the unlock\n            realCb(err, !err);\n          });\n        } else {\n          realCb(err, !err);\n        }\n      };\n\n      if (!err) {\n        locked = true;\n      }\n\n      if (err && err.code !== 'ENOENT') {\n        return cb(err);\n      }\n\n      const body = this._stringToUt8(res);\n      this.users = parseHTPasswd(body);\n\n      try {\n        changePasswordToHTPasswd(body, user, password, newPassword, this.hashConfig)\n          .then((content) => {\n            this._writeFile(content, cb);\n          })\n          .catch((err) => {\n            cb(err);\n          });\n      } catch (err) {\n        return cb(err);\n      }\n    });\n  }\n}\n"],"mappings":"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"}